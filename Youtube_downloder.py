# Form implementation generated from reading ui file 'Downloader.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from pytube  import YouTube,Playlist





class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(640, 480)
        Form.setStyleSheet("background-color: rgb(170, 170, 127);")
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(0, 130, 640, 140))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.widget.setFont(font)
        self.widget.setStyleSheet("background-color: rgb(255, 170, 127);")
        self.widget.setObjectName("widget")
        self.single_btn = QtWidgets.QRadioButton(self.widget)
        self.single_btn.setGeometry(QtCore.QRect(30, 10, 70, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.single_btn.setFont(font)
        self.single_btn.setObjectName("single_btn")
        self.list_btn = QtWidgets.QRadioButton(self.widget)
        self.list_btn.setGeometry(QtCore.QRect(140, 10, 70, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.list_btn.setFont(font)
        self.list_btn.setObjectName("list_btn")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(30, 60, 60, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.url = QtWidgets.QLineEdit(self.widget)
        self.url.setGeometry(QtCore.QRect(100, 60, 400, 30))
        self.url.setObjectName("url")
        self.search_btn = QtWidgets.QPushButton(self.widget)

        # search options
        self.search_btn.clicked.connect(self.search)


        self.search_btn.setGeometry(QtCore.QRect(520, 60, 60, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.search_btn.setFont(font)
        self.search_btn.setObjectName("search_btn")
        self.download_btn = QtWidgets.QPushButton(self.widget)
    
        self.download_btn.setGeometry(QtCore.QRect(270, 100, 70, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.download_btn.setFont(font)
        
        # download button

        self.download_btn.setObjectName("download_btn")
        self.download_btn.clicked.connect(self.download)


        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(70, 30, 260, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.output_l = QtWidgets.QLabel(Form)
        self.output_l.setGeometry(QtCore.QRect(100, 280, 400, 30))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.output_l.setFont(font)
        self.output_l.setText("")
        self.output_l.setObjectName("output_l")
        
        
        

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Downloader"))
        self.single_btn.setText(_translate("Form", "Single"))
        self.list_btn.setText(_translate("Form", "PlayList"))
        self.label.setText(_translate("Form", "URl"))
        self.search_btn.setText(_translate("Form", "Search"))
        self.download_btn.setText(_translate("Form", "Download"))
        self.label_2.setText(_translate("Form", "Youtube Downloder"))
    

    def search(self):
        
            link=self.url.text()



            if len(link)!=0:
                try:
                    self.output_l.setText(YouTube(link).title)
                except:
                
                    self.output_l.setText(Playlist(link).title)
                # else:self.output_l.setText(Playlist(link).title)
                    

            else:self.output_l.setText('Please Insert URL')

            
                
    def download(self):
            link=self.url.text()
            if len(link)==0 and self.single_btn.isChecked()==False and self.list_btn.isChecked()==False:
                self.output_l.setText('Please insert a YouTube URL')
            
            elif len(link)!=0 and self.single_btn.isChecked()==False and self.list_btn.isChecked()==False:
                self.output_l.setText('Please Select options')
            

            elif len(link)!=0 and self.single_btn.isChecked():
                try:

                    tube=YouTube(link)
                    
                    self.output_l.setText('Downloading...Please Dont Close Application')
                    tube.streams.get_highest_resolution().download()

                    self.output_l.setText('Completed.....')
   
                except:
                    self.output_l.setText('Invalid URL Check Option Is Pylist url or Single')
                



    
            
            elif len(link)!=0 and self.list_btn.isChecked():

                try:
                    tube_list=Playlist(link)
                    
                    

                    for i in tube_list.videos_generator():
                        self.output_l.setText('Downloading...Please Dont Close Application')
                        i.streams.get_highest_resolution().download()
                        self.output_l.setText('Completed.....')

                    
                
                except:


                    self.output_l.setText('Invalid URL Check Option Is Single Video url or Playlist')
            
        
           

        
     
   
       

                
                
           
            



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())
